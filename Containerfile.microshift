FROM rhel-registered as registered
FROM registry.redhat.io/rhel9/rhel-bootc:9.5

# Build arguments
ARG SSH_KEY
ARG USER_PASSWD
ARG BUILD_TARGET

# Fail early if USER_PASSWD is missing
RUN if [ -z "${USER_PASSWD}" ]; then \
        echo USER_PASSWD is a mandatory build argument && exit 1 ; \
    fi

# Create default user and set up SSH access
RUN useradd -m -d /var/home/redhat -G wheel redhat && \
    echo "redhat:${USER_PASSWD}" | chpasswd && \
    mkdir -p /var/home/redhat/.ssh && \
    echo "${SSH_KEY}" >> /var/home/redhat/.ssh/authorized_keys 

COPY --from=registered /etc/pki/entitlement /etc/pki/entitlement
COPY --from=registered /etc/pki/consumer /etc/pki/consumer
COPY --from=registered /etc/rhsm/rhsm.conf /etc/rhsm/rhsm.conf
COPY --from=registered /etc/rhsm/ca /etc/rhsm/ca

ARG USHIFT_VER=4.18
# hadolint ignore=SC1091
RUN . /etc/os-release && dnf upgrade -y --releasever="${VERSION_ID}" && \
    dnf config-manager \
        --set-enabled "rhocp-${USHIFT_VER}-for-rhel-9-$(uname -m)-rpms" \
        --set-enabled "fast-datapath-for-rhel-9-$(uname -m)-rpms" \
        --set-enabled codeready-builder-for-rhel-9-$(arch)-rpms && \
    dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm firewalld jq microshift microshift-release-info && \
    systemctl enable microshift && \
    dnf clean all

# Mandatory firewall configuration
RUN firewall-offline-cmd --zone=public --add-port=22/tcp && \
    firewall-offline-cmd --zone=trusted --add-source=10.42.0.0/16 && \
    firewall-offline-cmd --zone=trusted --add-source=169.254.169.1 && \
    firewall-offline-cmd --zone=trusted --add-source=fd01::/48
    # Application-specific firewall configuration
RUN firewall-offline-cmd --zone=public --add-port=80/tcp && \
    firewall-offline-cmd --zone=public --add-port=443/tcp && \
    firewall-offline-cmd --zone=public --add-port=30000-32767/tcp && \
    firewall-offline-cmd --zone=public --add-port=30000-32767/udp

# Create a systemd unit to recursively make the root filesystem subtree
# shared as required by OVN images
RUN cat > /usr/lib/systemd/system/microshift-make-rshared.service <<'EOF'
[Unit]
Description=Make root filesystem shared
Before=microshift.service
ConditionVirtualization=container
[Service]
Type=oneshot
ExecStart=/usr/bin/mount --make-rshared /
[Install]
WantedBy=multi-user.target
EOF

# hadolint ignore=DL3059
RUN systemctl enable microshift-make-rshared.service


# Copy binary from build output based on target
COPY target/${BUILD_TARGET}/release/greenlight-cli /usr/bin/greenlight
RUN chmod +x /usr/bin/greenlight

# Copy config
RUN mkdir -p /etc/greenlight/
COPY config.toml /etc/greenlight/

# Required Health Check with retry logic
RUN cat > /usr/lib/systemd/system/greenlight-required.service <<'EOF'
[Unit]
Description=Custom Required Health Check
After=basic.target
Before=boot-complete.target
OnFailure=redboot.target
OnFailureJobMode=fail

[Service]
Type=oneshot
ExecStartPre=/bin/sleep 10
ExecStart=/usr/bin/greenlight --only required

[Install]
RequiredBy=boot-complete.target
EOF

RUN systemctl enable greenlight-required

# Wanted Health Check (no retry)
RUN cat > /usr/lib/systemd/system/greenlight-wanted.service <<'EOF'
[Unit]
Description=Custom Wanted Health Check
Before=boot-complete.target

[Service]
Type=oneshot
ExecStart=/usr/bin/greenlight --only wanted

[Install]
WantedBy=boot-complete.target
EOF

RUN systemctl enable greenlight-wanted

# Disable default swap units
RUN mkdir -p /etc/systemd/system/dev-zram0.swap && \
    ln -sf /dev/null /etc/systemd/system/dev-zram0.swap && \
    ln -sf /dev/null /etc/systemd/system/swap.target

# Open vSwitch ownership fix
RUN mkdir -p /usr/lib/systemd/system/ovsdb-server.service.d && \
    cat > /usr/lib/systemd/system/ovsdb-server.service.d/microshift-ovsdb-ownership.conf <<'EOF'
[Service]
ExecStartPre=/bin/sh -c '/bin/getent passwd openvswitch >/dev/null || useradd -r openvswitch'
ExecStartPre=/bin/sh -c '/bin/getent group hugetlbfs >/dev/null || groupadd -r hugetlbfs'
ExecStartPre=/sbin/usermod -a -G hugetlbfs openvswitch
ExecStartPre=/bin/chown -Rhv openvswitch. /etc/openvswitch
EOF
